$date
  Sun Mar 24 21:26:32 2013
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$var reg 32 ! instruction[31:0] $end
$var reg 5 " destination_register[4:0] $end
$var reg 5 # register1[4:0] $end
$var reg 5 $ register2[4:0] $end
$var reg 1 % write_register $end
$var reg 1 & read_memory $end
$var reg 1 ' write_memory $end
$var reg 3 ( alu_operation[2:0] $end
$var reg 16 ) offset[15:0] $end
$scope module control $end
$var reg 32 * instruction[31:0] $end
$var reg 5 + destination_register[4:0] $end
$var reg 5 , register1[4:0] $end
$var reg 5 - register2[4:0] $end
$var reg 1 . write_register $end
$var reg 3 / alu_operation[2:0] $end
$var reg 1 0 read_memory $end
$var reg 1 1 write_memory $end
$var reg 16 2 offset[15:0] $end
$upscope $end
$enddefinitions $end
#0
b00000000011111000000100000000010 !
b00011 "
b11100 #
b00001 $
1%
U&
U'
b010 (
bUUUUUUUUUUUUUUUU )
b00000000011111000000100000000010 *
b00011 +
b11100 ,
b00001 -
1.
b010 /
U0
U1
bUUUUUUUUUUUUUUUU 2
#100000000
b10001111110100110000000000000100 !
b11110 "
b10011 #
1&
b0000000000000100 )
b10001111110100110000000000000100 *
b11110 +
b10011 ,
10
b0000000000000100 2
#200000000
b10101110000000010000000000001000 !
b10000 "
b00001 #
1'
b0000000000001000 )
b10101110000000010000000000001000 *
b10000 +
b00001 ,
11
b0000000000001000 2
#300000000
